{"version":3,"sources":["axios.js","components/Row.js","requests.js","components/Banner.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","useEffect","a","get","request","data","results","fetchData","className","map","movie","src","poster_path","backdrop_path","alt","name","id","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","Math","floor","random","length","console","log","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","Nav","show","setShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d672f0f9.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;\n","import { useState, useEffect } from \"react\";\nimport axios from \"../axios\";\nimport \"./Row.css\";\n\nconst imgBaseURL = \"https://image.tmdb.org/t/p/original\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n\n      <div className=\"row_posters\">\n        {movies.map((movie) => (\n          <img\n            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n            key={movie.id}\n            src={`${imgBaseURL}${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Row;\n","const API_KEY = \"15c356bb08e7b409c7c287df56b8383c\";\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\n\nexport default requests;\n","import axios from \"../axios\";\nimport requests from \"../requests\";\nimport { useState, useEffect } from \"react\";\nimport \"./Banner.css\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n\n      return request;\n    }\n\n    fetchData();\n  }, []);\n\n  console.log(movie);\n\n  // function truncate(str, n) {\n  //   return str.length > n ? str.substr(0, n - 1) + \"&hellip;\" : str;\n  // }\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${movie?.backdrop_path})`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"banner_contents\">\n        <h1 className=\"banner_title\">\n          {movie?.name || movie?.title || movie?.original_name}\n        </h1>\n        <div className=\"banner_buttons\">\n          <button className=\"banner_button\">Play</button>\n          <button className=\"banner_button\">My List</button>\n        </div>\n        <h1 className=\"banner_description\">{movie?.overview}</h1>\n      </div>\n      <div className=\"banner_fadeBottom\" />\n    </header>\n  );\n}\n\nexport default Banner;\n","import { useEffect, useState } from \"react\";\nimport \"./Nav.css\";\n\nfunction Nav() {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 1) {\n        setShow(true);\n      } else setShow(false);\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n\n  return (\n    <div className={`nav ${show && \"nav_black\"}`}>\n      <img\n        className=\"nav_logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/2880px-Netflix_2015_logo.svg.png\"\n        alt=\"Netflix Logo\"\n      />\n      <img\n        className=\"nav_avatar\"\n        src=\"https://occ-0-4146-395.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABTYctxxbe-UkKEdlMxXm4FVGD6DqTHkQ0TQ5CQJ9jbOMnG0CYxYcSICcTUQz8DrB7CpKUGpqJVMtEqksLlvSJx2ac3Ak.png?r=a41\"\n        alt=\"Avatar\"\n      />\n    </div>\n  );\n}\n\nexport default Nav;\n","import \"./App.css\";\nimport Row from \"./components/Row\";\nimport Banner from \"./components/Banner\";\nimport Nav from \"./components/Nav\";\nimport requests from \"./requests\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"Netflix Originals\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaires\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}